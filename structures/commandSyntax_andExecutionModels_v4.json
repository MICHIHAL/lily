[
  {
    "name": "commandSyntaxRule_v4.0",
    "type": "Model",
    "zone": "ZONE-1",
    "description": "構造定義・保存命令などに用いる自然言語命令の構文ルールを定義。Swift準拠構造と連動し、命令処理の安定化を図る。",
    "version": "4.0",
    "syntaxRules": {
      "prefix": "▶ 命令：",
      "structure": "命令内容は日本語自然文で書き、命令語で始まること（例：保存して／定義せよ／構築せよ）",
      "classification": "命令の対象はModel/Func/UI/View/Structのいずれかであること",
      "format": "命令語＋構造名（＋内容）を基本構造とする",
      "autoHandling": "命令中に構造名・タイプが含まれていない場合はAIが文脈から補完して処理",
      "errorHandling": "誤命令や曖昧命令は警告を返し、修正提案を行う"
    },
    "notes": "この構文ルールは今後の命令自動補完や保存処理に必須であり、すべての構造出力に影響を与える。"
  },
  {
    "name": "commandExecutionFlow_v1.0",
    "type": "Model",
    "zone": "ZONE-1",
    "description": "命令文の受理から構造出力・保存処理までの流れを定義したフローモデル。AIによる補完とエラー検出の責務分離を示す。",
    "version": "1.0",
    "executionSteps": [
      "1. 命令文を構文ルールに従って解析",
      "2. 命名クラス・保存先ZONE・出力形式を自動補完",
      "3. 構造体を生成し、内容を検証",
      "4. 保存先ポリシー（memoryPolicy_v4.0）と照合",
      "5. ファイルとして保存・出力（フル統合形式）",
      "6. 出力後にセルフレビューで不整合検知",
      "7. ユーザー確認または修正処理"
    ],
    "notes": "この処理モデルにより、ユーザーは命令だけで構造体定義・保存・出力まで一貫して行える。"
  }
]